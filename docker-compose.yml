

services:
  web:
    build: .
    container_name: django-container
    ports:
      - "8000:8000"
    volumes:
      - ./djangomain:/app
    environment:
      - DATABASE_URL=postgres://postgres:qwerty@db:5432/gjango_db
      - REDIS_HOST=redis
    command: sh -c "python manage.py migrate && gunicorn main_app.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:17
    container_name: postgres-container
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=qwerty
      - POSTGRES_DB=gjango_db
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis-container
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./users.acl:/usr/local/etc/redis/users.acl:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    tty: true
    stdin_open: true

  celery:
    build: .
    container_name: celery-container
    depends_on:
      - redis
    volumes:
      - ./logs:/var/log  # Для сохранения логов
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local